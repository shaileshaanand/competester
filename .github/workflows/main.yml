name: Test and Deploy
on:
    push:
    pull_request:
    release:
        types: [created]
jobs:
    test_linux:
        name: Linux Tests
        runs-on: ubuntu-latest
        strategy:
            max-parallel: 4
            matrix:
                python-version: [3.7, 3.8]
        steps:
            - uses: actions/checkout@v2
            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v1
              with:
                  python-version: ${{ matrix.python-version }}
            - name: Install Dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install -r requirements.txt
                  pip install --editable .
            - name: Run Tests
              run: |
                  python3 tests/test_platform.py
    test_windows:
        runs-on: windows-latest
        name: Windows Tests
        strategy:
            max-parallel: 4
            matrix:
                python-version: [3.7, 3.8]
        steps:
            - uses: actions/checkout@v2
            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v1
              with:
                  pytohn-version: ${{ matrix.python-version }}
            - name: Set up JDK 1.8
              uses: actions/setup-java@v1
              with:
                  java-version: 1.8
            - name: Install Dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install -r requirements.txt
                  pip install --editable .
            - name: Run Tests
              run: |
                  python tests/test_platform.py
    publish_pypi:
        runs-on: ubuntu-latest
        name: Publish to pypi
        needs: [test_linux, test_windows]
        if: github.event == 'release'
        steps:
            - uses: actions/checkout@v2
            - name: Set up Python
              uses: actions/setup-python@v2
              with:
                  python-version: "3.8"
            - name: Install Dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install -r requirements.txt
                  pip install setuptools wheel twine
            - name: Build and Publish
              env:
                  TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
                  TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
              run: |
                  python setup.py sdist bdist_wheel
                  twine upload dist/*
